// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tasks.Parallel;

#nullable disable

namespace Tasks.Parallel.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20240407174814_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("Tasks.Parallel.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Blog");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Tasks.Parallel.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlogId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Tasks.Parallel.Article", b =>
                {
                    b.HasBaseType("Tasks.Parallel.Blog");

                    b.Property<string>("ArticleUrl")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Article");
                });

            modelBuilder.Entity("Tasks.Parallel.Journal", b =>
                {
                    b.HasBaseType("Tasks.Parallel.Blog");

                    b.Property<string>("JournalPost")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Journal");
                });

            modelBuilder.Entity("Tasks.Parallel.MiniPost", b =>
                {
                    b.HasBaseType("Tasks.Parallel.Blog");

                    b.Property<string>("MiniPostUrl")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("MiniPost");
                });

            modelBuilder.Entity("Tasks.Parallel.Research", b =>
                {
                    b.HasBaseType("Tasks.Parallel.Blog");

                    b.Property<string>("ResearchUrl")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Research");
                });

            modelBuilder.Entity("Tasks.Parallel.Post", b =>
                {
                    b.HasOne("Tasks.Parallel.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("Tasks.Parallel.Blog", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
